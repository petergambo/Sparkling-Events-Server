generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
  EDITOR
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  first_name String
  last_name  String
  password   String
  image_url  String
  isVerified Boolean  @default(false)
  phone      String   @default("")
  otp        String? 
  role       UserRole @default(USER)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  Wallet                 Wallet[]
  Logs                  Logs[]
  AirtimeDataConversion AirtimeDataConversion[]
  Transaction           Transaction[]
}

model Variations {
  id               String   @id @default(auto()) @map("_id") @db.ObjectId
  variation_code   String   @unique
  name             String
  variation_amount String
  fixedPrice       String
  service          String
  salePrice        String?
  updatedAt        DateTime @default(now()) @updatedAt
}

enum ProjectCategory {
  REAL_ESTATE
  SWIMMING_POOL
  ARCHITECTURAL_DESIGN
  CONSTRUCTION
}

enum STATUS {
  PENDING
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model Wallet {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  walletNo     String   @unique
  amount       Float    @default(0.0)
  userId       String   @unique @db.ObjectId
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  baseCurrency String   @default("NGN")
  pin          Pin?
}

model Pin {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  walletId       String   @unique @db.ObjectId
  wallet         Wallet   @relation(fields: [walletId], references: [id], onDelete: Cascade)
  pin            String
  changePinToken String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Device {
  WEB
  MOBILE
}

model Logs {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  device    Device   @default(WEB)
  activity  String
  userId    String @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model AirtimeDataConversion {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  category        String
  incomingPhone   String
  networkProvider String
  paymentMethod   String
  amount          Int
  status          String
  bankName        String?
  accountNumber   String?
}

model Transaction {
  id          String            @id @default(auto()) @map("_id") @db.ObjectId
  reference   String            @unique
  email       String
  userId      String @db.ObjectId
  user        User              @relation(fields: [userId], references: [id])
  type        ServiceType
  amount      Int
  description String
  currency    String            @default("NGN")
  isTopUp     Boolean?          @default(false)
  status      TransactionStatus @default(PENDING)
  pdfUrl      String?
  imageUrl    String?
  createdAt   DateTime          @default(now())
}

enum TransactionStatus {
  SUCCESS
  PENDING
  FAILED
  CANCELLED
}

enum ServiceType {
  AIRTIME
  DATA
  ELECTRICITY
  GIFT_CARD
  CRYPTO
  WALLET_TOPUP
}

model WaitList {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  fullname  String
  createdAt DateTime @default(now())
}
